<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.happyjob.study.scm.sales.dao.SalesManageDao">
	
	
	
	<!-- 검색 조건에 따른 상품 리스트 가져오기 -->
	<select id="getSalesList" parameterType="kr.happyjob.study.scm.sales.model.PageInfo" resultType="kr.happyjob.study.scm.sales.model.Sales">
		SELECT 
			model_code,
			model_nm,
			sales_id,
			sales_nm,
			mfcomp,
			price
		FROM
			tb_sales
		<if test='!"all.equals(searchType)"'>
			<where>
				<if test='"sales_nm".equals(searchType)'>
					AND sales_nm
				</if>
				<if test='"model_nm".equals(searchType)'>
					AND model_nm
				</if>
				<if test='"mfcomp".equals(searchType)'>
					AND mfcomp
				</if>
						LIKE CONCAT('%',#{keyword},'%')
			</where>
		</if>
		ORDER BY
			sales_nm
		LIMIT #{firstIndex}, #{rowsPerPage}
	</select>
	
	
	<!-- 검색 조건에 따른 모든 상품의 데이터 개수 반환 -->
	<select id="getTotalCount" parameterType="kr.happyjob.study.scm.sales.model.PageInfo" resultType="Integer">
		SELECT 
			count(1)
		FROM
			tb_sales
		<if test='!"all.equals(searchType)"'>
			<where>
				<if test='"sales_nm".equals(searchType)'>
					AND sales_nm
				</if>
				<if test='"model_nm".equals(searchType)'>
					AND model_nm
				</if>
				<if test='"mfcomp".equals(searchType)'>
					AND mfcomp
				</if>
						LIKE CONCAT('%',#{keyword},'%')
			</where>
		</if>
	</select>
	
	<!-- 해당 상품 상세정보 가져오기 -->
	<select id="getSalesDetails" resultType="kr.happyjob.study.scm.sales.model.SalesDetails">
		SELECT
				model_code,
				model_nm,
				sales_id,
				sales_nm,
				mfcomp,
				price,
				info
		FROM
			tb_sales
		WHERE
			sales_id=#{arg0}
	</select>
	
	<!-- get files -->
	<select id="getFilesBySalesID" resultType="kr.happyjob.study.common.comnUtils.FileModel">
	
		SELECT *
		FROM
			tb_sales_file
		WHERE sales_id=#{arg0}
		
		<!-- AND deletedYN='N' -->
	
	</select>
	
	
	<!-- insert sales Data -->
	<insert id="insertSales" useGeneratedKeys="true" keyProperty="sales_id" parameterType="kr.happyjob.study.scm.sales.model.SalesRegData">
		INSERT INTO
			tb_sales
					(
						model_code,
						sales_type,
						model_nm,
						sales_nm,
						mfcomp,
						price,
						info
						
					)
		VALUES
					(
						#{model_code},
						#{sales_type},
						#{model_nm},
						#{sales_nm},
						#{mfcomp},
						#{price},
						#{info}
					)
	
	</insert>
	
	<!-- Update Sales -->
	<update id="updateSales">
		UPDATE
			tb_sales
		SET
			model_code=#{model_code},
			model_nm=#{model_nm},
			sales_nm=#{sales_nm},
			mfcomp=#{mfcomp},
			price=#{price},
			info=#{info}
		WHERE sales_id=#{sales_id}
	</update>
	
	
	<!-- insert Files Data -->
	<insert id="insertFiles">
	
		INSERT INTO
			tb_sales_file
						(
							file_server_path,
							file_local_path,
							file_new_name,
							file_ofname,
							file_size,
							sales_id,
							file_exts
						)
				VALUES
						<foreach item="file" collection="list" separator=",">
							(
							'${file.file_server_path}',
							'${file.file_local_path}',
							'${file.file_new_name}',
							'${file.file_ofname}',
							'${file.file_size}',
							'${file.foreignKey}',
							'${file.file_exts}'
							)
						</foreach>
	
	</insert>
	
	
	<update id="deleteSales">
		UPDATE tb_sales
		SET deleteYN='Y'
		WHERE sales_id=#{arg0}
	
	</update>
	
	<delete id="deleteFiles">
		DELETE 
		FROM
			tb_sales_file
		WHERE
			file_no IN
			<foreach collection="list" separator="," open="(" close=")" item="file">
				'${file.file_no}'
			</foreach>
	</delete>
	
	
	
	<!-- 주문/발주 고유번호의 모든 구매 상품 idx 값 반환 -->
	<select id="selectAllPurchaseInfoByIdx" resultType="String">
		SELECT CONCAT(ts.sales_id,',',ts.sales_nm) 
		FROM 
				tb_sales ts JOIN
			<if test='userType.equals("C")'>
				tb_purchaseinfo tpi ON tpi.sales_id=ts.sales_id	
			</if>
			<if test='!userType.equals("C")'>
				tb_orderinfo toi ON toi.sales_id=ts.sales_id
			</if>
		WHERE pur_id=#{pur_id}
	</select>
	
	
	
	<!-- 주문 상세에 주문한 모든 상품번호를 조회해 구매상세,상품번호 형태로 리스트 반환 -->
	<select id="selectAllSalesByPurchaseIdx" resultType="String">
		SELECT 
			CONCAT(purinf_id,',',sales_id) AS sales_id 
		FROM 	
		tb_purchaseinfo 
		WHERE purinf_id IN
		<foreach collection="list" open="(" close=")" separator="," item="idx">
			#{idx}
		</foreach>
	</select>
	
	
	




</mapper>