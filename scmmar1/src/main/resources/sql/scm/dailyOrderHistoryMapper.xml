<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.scm.orders.dao.DailyOrderHistoryDao">

	
	<select id="listdailyOrderHistory" resultType="kr.happyjob.study.scm.orders.model.DailyOrderHistoryModel">
		SELECT
			tp.pur_id AS pur_id,
			date_format(tp.purdate,'%Y-%m-%d') AS purdate,
			tu.name,
			SUM(tpi.pur_cnt) AS pur_cnt_total,
			SUM(ts.price*tpi.pur_cnt) AS total_price,
			tp.depositYN
		FROM 
			tb_purchase tp  JOIN
			tb_userinfo tu ON tp.loginID=tu.loginID
						    LEFT JOIN
			tb_purchaseinfo tpi ON tpi.pur_id=tp.pur_id
							LEFT JOIN
			tb_sales ts ON ts.sales_id=tpi.sales_id
							LEFT JOIN
			tb_refundinfo tri ON tpi.purinf_id=tri.purinf_id
							LEFT JOIN
			tb_delivdir td ON tpi.purinf_id=td.purinf_id
		<where>
				<if test='!"null".equals(selectsearch)'>
					
						<![CDATA[
							and (tp.purdate >=
								#{datesearch1}
								and
								tp.purdate <=
									(select date_add(date_format(#{datesearch2}, '%Y-%m-%d'), interval 1 day))
								)
							]]>		
						
				</if>
				AND tu.user_Type='C' 
				AND tri.rfinfo_id IS NULL
				AND td.purinf_id is null	
				AND depositYN='Y'
		</where>
		
		GROUP BY tp.pur_id
		ORDER BY tp.purdate DESC
		LIMIT #{pageIndex}, #{pageSize}
	</select>
	
	<select id="total" resultType="int">
	
	SELECT COUNT(alias.pur_id) FROM (
		SELECT  tp.pur_id
		FROM   		
			tb_purchase tp  JOIN
			tb_userinfo tu ON tp.loginID=tu.loginID
						    LEFT JOIN
			tb_purchaseinfo tpi ON tpi.pur_id=tp.pur_id
							LEFT JOIN
			tb_sales ts ON ts.sales_id=tpi.sales_id
							LEFT JOIN
			tb_refundinfo tri ON tpi.purinf_id=tri.purinf_id
							LEFT JOIN
			tb_delivdir td ON tpi.purinf_id=td.purinf_id
		<where>
				<if test='!"null".equals(selectsearch)'>
					
						<![CDATA[
							and (tp.purdate >=
								#{datesearch1}
								and
								tp.purdate <=
									(select date_add(date_format(#{datesearch2}, '%Y-%m-%d'), interval 1 day))
								)
							]]>		
						
				</if>
				AND tu.user_Type='C' 
				AND tri.rfinfo_id is null
				AND td.purinf_id is null
				AND depositYN ='Y'
		</where>
		GROUP BY tp.pur_id
	) alias;
		
		
		
		
	</select>
	
	<select id="onedailyOrderHistory" resultType="kr.happyjob.study.scm.orders.model.WorkOrderModel">
		SELECT 
			tp.pur_id,
			tp.depositYN,
			ts.sales_nm,			
			tpi.purinf_id,
			tpi.pur_cnt,
			ts.price*tpi.pur_cnt AS price_sum,
			tpi.returnYN
		FROM tb_purchase tp 
				JOIN tb_userinfo tu ON tu.loginID=tp.loginID
				JOIN tb_purchaseinfo tpi ON tp.pur_id=tpi.pur_id
				JOIN tb_sales ts ON ts.sales_id=tpi.sales_id
		WHERE tp.pur_id=#{pur_id}
	</select>
	
	
	
	
	
	
	<select id="comf" resultType="kr.happyjob.study.scm.orders.model.DailyOrderHistoryModel">
		SELECT
			del.deliv_id
		FROM 
			tb_purchase pur JOIN 
			tb_purchaseinfo pinfo 
								ON pur.pur_id = pinfo.pur_id
							JOIN 
			tb_delivdir del 
								ON del.purinf_id = pinfo.purinf_id
		 WHERE pur.pur_id = #{pur_id}
	</select>
	
	<select id="come" resultType="kr.happyjob.study.scm.orders.model.DailyOrderHistoryModel">
		SELECT 
			pur.pur_id
		  FROM 
		  	tb_purchase pur 
		  					JOIN 
		  	tb_purchaseinfo pinfo 
		  						ON pur.pur_id = pinfo.pur_id
			  				JOIN 
			tb_refundinfo rinfo 
								ON pinfo.purinf_id = rinfo.purinf_id
							JOIN 
			tb_returndir rdir 
								ON rdir.rfinfo_id = rinfo.rfinfo_id
  	 	WHERE pur.pur_id = #{pur_id}
	</select>
	
	<select id="warehouse" resultType="kr.happyjob.study.scm.orders.model.warehouseModel">
		SELECT		wh_id AS wh_id
				,	wh_nm AS wh_nm
		FROM 		tb_warehouse
		
	</select>
	
	<select id="comp" resultType="kr.happyjob.study.scm.orders.model.CompModel">
		SELECT		comp_id AS comp_id
				,	comp_nm AS comp_nm
		FROM		tb_comp
	</select>
	
	
	<select id="whcnt" resultType="kr.happyjob.study.scm.orders.model.warehouseModel">
		SELECT 		st.st_cnt AS st_cnt
		FROM 	 	tb_stock st
			 join tb_sales sa ON sa.sales_id = st.sales_id
			 join tb_warehouse wh ON wh.wh_id = st.wh_id
			 join tb_userinfo user on user.loginID = wh.loginID
	 
	    WHERE 		sa.sales_id= #{sales_id} AND wh.wh_id = #{wh_id};
	</select>
	
	<!-- 발주상세 -->
	<insert id="insertcom2" useGeneratedKeys="true" keyProperty="fk" >
	INSERT
		 INTO tb_orderinfo
		 		(	
		 	  		order_cnt
		 		,	pur_id
		 		,	loginID
		 		,	sales_id
    		    , 	comp_id
				)
		VALUES (
			    	#{com_cnt}
		        ,	#{pur_id}
		        , 	#{loginID}
		        ,	#{sales_id}
		        , 	#{com_code}
				)
	</insert>
	
	<!-- 발주지시서 -->
	<insert id="insertcom1">
		<!-- <selectKey resultType="string" keyProperty="orderid" order="BEFORE">
            select DISTINCT(select max(orderid) from tb_orderdir)+1 from tb_orderdir
        </selectKey> -->
		 INSERT 
		 INTO tb_orderdir
		 		(	
		 			regdate
		 		,	order_id
				)
		VALUES (
					now()
		        ,	#{fk}
				);
	</insert>
	
	<!-- 반품 지시서 -->
	<insert id="insertreturn">
		insert into tb_returndir
	    		(	regdate 
	    		, 	return_cnt
	    		, 	dir_result
	    		, 	rfinfo_id
	    		)
	    values 	(	now()
	    		, 	#{return_cnt}
	    		, 	'O'
	    		,  (
	    			select rinfo.rfinfo_id
			          from tb_refundinfo rinfo
			            join tb_purchaseinfo pinfo ON pinfo.purinf_id = rinfo.purinf_id
			              where pinfo.pur_id = #{pur_id}
	                )
	    		)
	</insert>
	
	<!-- 배송 지시서 -->
	<insert id="insertdel">
		insert into tb_delivdir
			(
				regdate
			,	deliverStatus
			,	purinf_id
			,	deliv_wh_id
			
			)
	values
			(
				now()
			,	'U'
			,	(
					select pinfo.purinf_id
					  from tb_purchaseinfo pinfo
					   	join tb_purchase pur on pur.pur_id = pinfo.pur_id
					  where pinfo.pur_id = #{pur_id} and pinfo.sales_id = #{sales_id}
				)
			,	#{deliv_wh_id}
			)
	</insert>
	
</mapper>