<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="kr.happyjob.study.notice.dao.ScmNoticeDao">

	<!-- 공지사항 작성 -->
	<insert id="insertNotice" useGeneratedKeys="true" keyProperty="ntc_no">
		INSERT INTO tb_notice(
						ntc_title, 
						ntc_content, 
						loginID
					 	)
				VALUES(
				#{ntc_title},
				#{ntc_content},
				#{loginID}
				)
	</insert>
	
	<!-- 파일 테이블에 제품 내용 등록 -->
	<insert id="insertNoticeFile">
		INSERT INTO tb_notice_file
		(
			file_server_path, 
			file_local_path, 
			file_new_name, 
			file_ofname, 
			file_size, 
			ntc_no
		)
		VALUES
		<foreach item="f" collection="list" separator=",">
		(
			#{f.file_server_path},
			#{f.file_local_path},
			#{f.file_new_name},
			#{f.file_ofname},
			#{f.file_size},
			#{f.foreignKey}
		)
		</foreach>
	</insert>
	
	<!-- 공지사항에 첨부된 파일들 조회 -->
	<select id="selectFilesByNoticeId" resultType="kr.happyjob.study.common.comnUtils.FileModel">	
		SELECT
			file_no,
			file_server_path,
			file_local_path,
			file_relative_path,
			file_new_name,
			file_ofname,
			file_size,
			ntc_no AS foreignKey
		FROM tb_notice_file
		WHERE ntc_no = #{ntc_no} 		
	</select>
	
	<!-- 파일 리스트 조회(파일 id) -->
	<select id="selectFilesByFileNo" resultType="kr.happyjob.study.common.comnUtils.FileModel">
		SELECT
			file_no,
			file_server_path,
			file_local_path,
			file_relative_path,
			file_new_name,
			file_ofname,
			file_size,
			ntc_no AS foreignKey
		FROM tb_notice_file
		WHERE file_no IN
						<foreach collection="list" item="idx" open="(" close=")" separator=",">
							#{idx}
						</foreach>
	</select>
	
	<!-- 특정 파일 조회 -->
	<select id="selectOneFile" resultType="kr.happyjob.study.common.comnUtils.FileModel">
		SELECT
			file_server_path,
			file_relative_path,
			file_local_path,
			file_ofname,
			file_size
		FROM tb_notice_file
		WHERE file_no=#{arg0}
	</select>
	
		
	<!-- 공지사항 리스트 -->
	<select id="selectNoticeList" resultType="kr.happyjob.study.notice.model.NoticeModel">
		SELECT
		ntc_no, ntc_title, loginID, ntc_regdate, ntc_editdate
		FROM tb_notice

		<where>
			<choose>				
				<when test="(oname eq 'title'.toString())">
					and ntc_regdate between #{from_date} and date_add(#{to_date}, interval 1 day)
					and ntc_title Like CONCAT('%', #{sname}, '%')
				</when>
				<when test="(oname eq 'content'.toString())">
					and ntc_regdate between #{from_date} and date_add(#{to_date}, interval 1 day)
					and ntc_content LIKE CONCAT('%', #{sname}, '%')
				</when>
				<when test="(oname eq 'all'.toString())">
					and (ntc_regdate between #{from_date} and date_add(#{to_date}, interval 1 day))
					and (
							(ntc_title Like CONCAT('%', #{sname}, '%'))
							OR 	
							(ntc_content LIKE CONCAT('%', #{sname}, '%'))
						)
				</when>
			</choose>
			AND ntc_deldate is NULL
		</where>
		ORDER BY ntc_regdate DESC
		LIMIT #{pageIndex}, #{pageSize}
	</select>
	
	<!-- 공지 사항 수 구하기 -->
	<select id="noticeTotalCnt" resultType="int">
		SELECT COUNT(1)
		FROM tb_notice
		<where>
			<choose>				
				<when test="(oname eq 'title'.toString())">
					and ntc_regdate between #{from_date} and date_add(#{to_date}, interval 1 day)
					and ntc_title Like CONCAT('%', #{sname}, '%')
				</when>
				<when test="(oname eq 'content'.toString())">
					and ntc_regdate between #{from_date} and date_add(#{to_date}, interval 1 day)
					and ntc_content LIKE CONCAT('%', #{sname}, '%')
				</when>
				<when test="(oname eq 'all'.toString())">
					and (ntc_regdate between #{from_date} and date_add(#{to_date}, interval 1 day))
					and (
							(ntc_title Like CONCAT('%', #{sname}, '%'))
							OR 	
							(ntc_content LIKE CONCAT('%', #{sname}, '%'))
						)
				</when>
			</choose>
			AND ntc_deldate is NULL
		</where>
	</select>

	<!-- 공지사항 상세보기 -->
	<select id="detailNotice" resultType="kr.happyjob.study.notice.model.NoticeModel">
		<![CDATA[
		SELECT ntc_no,
			   loginID,
			   ntc_title,
			   ntc_regdate,
			   ntc_regdate,
			   ntc_content
		FROM   tb_notice
		WHERE  ntc_no = #{ntc_no}
			]]>
	</select>
	
	<select id="getNotice" resultType="kr.happyjob.study.notice.model.NoticeModel">
		SELECT ntc_no,
			   loginID,
			   ntc_title,
			   ntc_regdate,
			   ntc_regdate,
			   ntc_content
		FROM   tb_notice
		WHERE  ntc_no = #{arg0}
	</select>
	

	

	<!-- 공지사항 수정 -->
	<update id="updateNotice">
		UPDATE tb_notice
		SET 
		<if test="ntc_title!=null">
			ntc_title = #{ntc_title},
		</if>
		<if test="ntc_content!=null">
			ntc_content = #{ntc_content},
		</if>
		ntc_editdate = current_timestamp
		WHERE ntc_no = #{ntc_no}
	</update>

	<!-- 공지사항 삭제 -->
	<update id="deleteNotice">
		UPDATE tb_notice
		SET ntc_deldate=current_timestamp
		WHERE ntc_no = #{arg0};
	</update>
	
	<!--  첨부파일 삭제 -->  
	<delete id="deleteFile">
		DELETE FROM tb_notice_file
		WHERE ntc_no = #{arg0}
	</delete> 
	
	<!-- 선택한 첨부파일만 삭제 -->
	<delete id="deleteFiles">
		DELTE FROM tb_notice_file
		WHERE ntc_no IN
		<foreach collection="list" separator="," item="idx">
			#{idx}
		</foreach>
	</delete>
	
</mapper>