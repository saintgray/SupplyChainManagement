<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.epc.dao.RefundRequestDao">

	<select id="getOrderList" parameterType="kr.happyjob.study.epc.model.SearchParamDTO" resultType="kr.happyjob.study.epc.model.OrderListItemDTO">
		SELECT 
			    p.pur_id, DATE_FORMAT(p.purdate, '%Y-%m-%d') as purdate, i.purinf_id, i.pur_cnt, s.price, (i.pur_cnt * s.price) as total, DATE_FORMAT(i.wanted_date, '%Y-%m-%d') wanted_date, s.sales_id, d.deliverStatus 	
			    , (
			        SELECT 
				            COUNT(*)
				        FROM 
				            tb_purchaseinfo si
				        WHERE 
				            si.pur_id = p.pur_id
				    ) as item_cnt
			FROM 
			    tb_purchase p
			    INNER JOIN tb_purchaseinfo i ON i.pur_id = p.pur_id
			    INNER JOIN tb_sales s ON i.sales_id = s.sales_id
			    LEFT JOIN tb_delivdir d ON i.purinf_id = d.purinf_id
			WHERE 
			    p.loginID = #{loginID}
			    <if test="searchKeyword != null"> AND s.model_nm LIKE CONCAT('%', #{searchKeyword}, '%') </if>
			    <if test="dateStart != null"> AND p.purdate <![CDATA[ > ]]> #{dateStart} </if>
			    <if test="dateEnd != null"> AND p.purdate <![CDATA[ < ]]> #{dateEnd} </if>
			GROUP BY i.pur_id
			ORDER BY p.pur_id desc
			LIMIT #{startIndex}, #{pageBlockSize}
	</select>
	
	
	<select id="getTotalOrderListCnt" parameterType="kr.happyjob.study.epc.model.SearchParamDTO" resultType="int">
		SELECT 
				count(*)
			FROM (
				SELECT
					i.pur_id
				FROM 
				    tb_purchase p
				    INNER JOIN tb_purchaseinfo i ON i.pur_id = p.pur_id
				    INNER JOIN tb_sales s ON i.sales_id = s.sales_id
				    LEFT JOIN tb_delivdir d ON i.purinf_id = d.purinf_id
				     
				WHERE 
				    p.loginID = #{loginID}
				    <if test="searchKeyword != null and searchKeyword != ''"> AND s.model_nm LIKE CONCAT('%', #{searchKeyword}, '%') </if>
				    <if test="dateStart != null and dateStart != ''"> AND p.purdate <![CDATA[ > ]]> #{dateStart} </if>
				    <if test="dateEnd != null and dateEnd != ''"> AND p.purdate <![CDATA[ < ]]> #{dateEnd} </if>
				GROUP BY i.pur_id
				) as a
	</select>
	
	
	<select id="getOrderDetailList" parameterType="kr.happyjob.study.epc.model.SearchParamDTO" resultType="kr.happyjob.study.epc.model.OrderListItemDTO">
		SELECT 
			    i.pur_id, i.purinf_id, s.sales_type, s.model_nm, s.mfcomp, s.price, i.pur_cnt, (price * pur_cnt) as total, i.returnYN, r.return_cnt, r.rfinfo_id
			FROM 
			    tb_purchaseinfo i
			    INNER JOIN tb_sales s ON s.sales_id = i.sales_id
			    LEFT JOIN tb_refundinfo r ON r.purinf_id = i.purinf_id 
			WHERE
			    i.pur_id = #{purID}
			LIMIT #{startIndex}, #{pageBlockSize}
    </select>
     
    <select id="getTotalOrderDetailListCnt" parameterType="int" resultType="int">
		SELECT 
				COUNT(*)
			FROM (
				SELECT 
					    i.pur_id
					FROM 
					    tb_purchaseinfo i
					    INNER JOIN tb_sales s ON s.sales_id = i.sales_id
					WHERE
					    i.pur_id = #{purID}
			    ) as a
				
    </select>
    
    <insert id="insertRefundinfo" parameterType="kr.happyjob.study.epc.model.RefundinfoDTO">
    	INSERT INTO 
    			tb_refundinfo (account_number, account_holder, bank_name, purinf_id, return_cnt) 
	    	VALUES (#{account_number}, #{account_holder}, #{bank_name}, #{purinf_id}, #{return_cnt});
	    	
    	UPDATE 
    			tb_purchaseinfo 
    		SET 
    			returnYN = 'Y' 
   			WHERE 
   				purinf_id = #{purinf_id}
    	
    </insert>
    
    
    <select id="getBankNameList" resultType="string">
		SELECT 
				detail_name as bank_name 
			FROM 
				tb_detail_code 
			WHERE group_code = 'bankCD' 
				AND use_yn like 'Y'
    </select>
    
    <delete id="deleteRefundinfoByPurinfID" parameterType="int" >
    	DELETE 
    		FROM 
    			tb_refundinfo 
    		WHERE 
    			purinf_id = #{purinf_id}
    </delete>
    
    
     <update id="updatePurinfReturnYNtoY" parameterType="int" >
    	UPDATE
    			tb_purchaseinfo
    		SET 
    			returnYN = 'N'
    		WHERE 
    			purinf_id = #{purinf_id}
    </update>
</mapper>